{"ast":null,"code":"// BikeService.js\nimport bikesData from '../assets/data/bikes.json'; // Verilerin bulunduğu JSON dosyasını import etmelisin\n\n// JSON'dan bisikletleri okuma\nexport const getBikes = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve([...bikesData]), 500); // Veriyi simüle ederek getiriyoruz\n  });\n};\n\n// Yeni bisiklet ekleme\nexport const addBike = async newBike => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const addedBike = {\n        ...newBike,\n        id: Date.now()\n      }; // Benzersiz ID ekleniyor\n      resolve(addedBike);\n    }, 500);\n  });\n};","map":{"version":3,"names":["bikesData","getBikes","Promise","resolve","setTimeout","addBike","newBike","addedBike","id","Date","now"],"sources":["C:/Users/erkan/source/repos/bike-catalogue-app/frontend/src/services/BikeService.js"],"sourcesContent":["// BikeService.js\r\nimport bikesData from '../assets/data/bikes.json'; // Verilerin bulunduğu JSON dosyasını import etmelisin\r\n\r\n// JSON'dan bisikletleri okuma\r\nexport const getBikes = async () => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => resolve([...bikesData]), 500); // Veriyi simüle ederek getiriyoruz\r\n  });\r\n};\r\n\r\n// Yeni bisiklet ekleme\r\nexport const addBike = async (newBike) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const addedBike = { ...newBike, id: Date.now() }; // Benzersiz ID ekleniyor\r\n      resolve(addedBike);\r\n    }, 500);\r\n  });\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,2BAA2B,CAAC,CAAC;;AAEnD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAMD,OAAO,CAAC,CAAC,GAAGH,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,OAAO,GAAG,MAAOC,OAAO,IAAK;EACxC,OAAO,IAAIJ,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACf,MAAMG,SAAS,GAAG;QAAE,GAAGD,OAAO;QAAEE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC,CAAC;MAClDP,OAAO,CAACI,SAAS,CAAC;IACpB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}