{"ast":null,"code":"// src/services/api.js\n\n// src/services/api.js\n\nexport const getBikes = async () => {\n  const response = await fetch('/assets/data/bikes.json'); // This works when the file is in public\n  const bikesData = await response.json();\n  return bikesData;\n};\nexport const addBike = async newBike => {\n  newBike.id = Date.now(); // Assign unique ID based on timestamp\n  const response = await fetch('/assets/data/bikes.json', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newBike)\n  });\n  return response.json();\n};","map":{"version":3,"names":["getBikes","response","fetch","bikesData","json","addBike","newBike","id","Date","now","method","headers","body","JSON","stringify"],"sources":["C:/Users/erkan/source/repos/bike-catalogue-app/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\n// src/services/api.js\r\n\r\nexport const getBikes = async () => {\r\n    const response = await fetch('/assets/data/bikes.json'); // This works when the file is in public\r\n    const bikesData = await response.json();\r\n    return bikesData;\r\n  };\r\n  \r\n  export const addBike = async (newBike) => {\r\n    newBike.id = Date.now(); // Assign unique ID based on timestamp\r\n    const response = await fetch('/assets/data/bikes.json', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newBike),\r\n    });\r\n    return response.json();\r\n  };\r\n  "],"mappings":"AAAA;;AAEA;;AAEA,OAAO,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;EACzD,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACvC,OAAOD,SAAS;AAClB,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,OAAO,IAAK;EACxCA,OAAO,CAACC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzB,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,EAAE;IACtDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;EAC9B,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}